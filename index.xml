<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>undefined on undefined </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://marony.github.io/</link>
    <language>ja</language>
    
    
    <updated>Fri, 22 Feb 2019 09:15:31 JST</updated>
    
    <item>
      <title>可愛い・綺麗ってなに？</title>
      <link>http://marony.github.io/post/post_20190222091531/</link>
      <pubDate>Fri, 22 Feb 2019 09:15:31 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190222091531/</guid>
      <description>

&lt;h2 id=&#34;可愛い-綺麗ってなに&#34;&gt;可愛い・綺麗ってなに？&lt;/h2&gt;

&lt;p&gt;エビデンスも何もないポエムです。&lt;br /&gt;
「可愛い」とか「綺麗」って不思議じゃないですか？&lt;/p&gt;

&lt;p&gt;基本的には人類の進化の過程で身についた種の存続に必要な感性なのでしょう。&lt;/p&gt;

&lt;p&gt;わかりやすく僕にとっての異性である女の人で説明しますが、
芸能人には可愛い人や綺麗な人が多いです。&lt;br /&gt;
これに異論がある人がいるとそこで話は終わってしまうのですが、
好みの問題はあるにしても、人によって可愛い・綺麗の方向性は似ているんじゃないかと思っています。&lt;/p&gt;

&lt;p&gt;アメリカ映画やインド映画や韓国映画を見ても、彼らにとっての美男美女であろう俳優たちは僕にとっても美男美女です。&lt;br /&gt;
もちろん「この人はないだろ」という人がいないことはないですが、おおまかな方向性としてはそうです。&lt;br /&gt;
これは欧米文化に触れると身につく感性なのでしょうか？&lt;br /&gt;
未開の民族では違うのかも知れませんが、国も文化も違うのに似通っているというのが不思議でなりません。&lt;/p&gt;

&lt;p&gt;「可愛い」は赤ちゃんや子供を可愛がるように本能的に可愛く見えると聞いたことがあります。&lt;br /&gt;
小さくて目が大きくて笑顔で顔のパーツが真ん中に寄っているとかですね。&lt;br /&gt;
アニメやゲームの可愛いキャラクターはこれをデフォルメしたようになってますよね。&lt;br /&gt;
人間でなく、動物の赤ちゃんもそういう傾向があるように思います。&lt;/p&gt;

&lt;p&gt;これは「弱者を可愛がりたい」というまさに種の存続に直結することなのでさして不思議ではありません。&lt;/p&gt;

&lt;p&gt;本題は「綺麗」の方です。&lt;br /&gt;
様々な人間の顔の平均を取ると「綺麗」な顔になるという話を聞いたことがあります。&lt;/p&gt;

&lt;p&gt;「綺麗」というのは様々な病気・障害から一番かけ離れた外見なのではないかと思っています。&lt;br /&gt;
あるいは、体が丈夫な人の優れている人の特徴だったりするのかも知れません。&lt;br /&gt;
ちょっと詳しく書くと倫理的に問題があり炎上しそうなのですが、そういう特定の人たちから遠ざかるためにそこからかけ離れた人が綺麗に好ましく見えるのではないかと。&lt;/p&gt;

&lt;p&gt;さらに「論理的」な人や「オタク」は綺麗ではない人が多いのではないかと思っています。&lt;br /&gt;
人類にとって確かに必要だけれど、不必要に増えてしまうと種が存続できないのではないかと。&lt;/p&gt;

&lt;p&gt;また「綺麗」な人は「生活感を感じない」ような気がしますし、「中性的」でもあるような気がします。&lt;br /&gt;
この辺はよくわからないです。&lt;br /&gt;
どういう意味があるのでしょうか？&lt;/p&gt;

&lt;p&gt;はい、ポエムでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C#でハマった</title>
      <link>http://marony.github.io/post/post_20190218084518/</link>
      <pubDate>Wed, 20 Feb 2019 09:30:19 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190218084518/</guid>
      <description>

&lt;h2 id=&#34;c-でハマった&#34;&gt;C#でハマった&lt;/h2&gt;

&lt;p&gt;最近久しぶりにC#でハマったので備忘録です。&lt;br /&gt;
lock中で要素を列挙したかったのですが、ロックの外での列挙になってしまい&lt;code&gt;System.InvalidOperationException: コレクションが変更されました。列挙操作は実行されない可能性があります。&lt;/code&gt;が発生してしまっていました。&lt;/p&gt;

&lt;p&gt;簡易的なコードは下記&lt;/p&gt;

&lt;h3 id=&#34;正しいコード&#34;&gt;正しいコード&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;11
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;12
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;13
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;14
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;16
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;17
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;18
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;19
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;21
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;22
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;23
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;24
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;25
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;26
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;47
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Collections.Generic;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Linq;

&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; Sample
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Program&lt;/span&gt;
    {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;object&lt;/span&gt; _lock = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;object&lt;/span&gt;();

&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&amp;gt; Enum1()
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: Enum1&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;lock&lt;/span&gt; (_lock)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Enumerable.Range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                        &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; i;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                }
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: Enum1&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        }
&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Loop1()
        {
            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: Loop1&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
            {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Enum1())
                    Console.WriteLine(i);
            }
            &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
            {
                Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: Loop1&amp;#34;&lt;/span&gt;);
            }
        }

        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[]&lt;/span&gt; args)
        {
            Loop1();
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;結果&#34;&gt;結果&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ENTER: Loop1
ENTER: Enum1
1
2
3
EXIT: Enum1
EXIT: Loop1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;間違ったコード&#34;&gt;間違ったコード&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;25
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;26
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;27
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;28
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;29
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;30
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;31
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;32
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;33
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;34
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;35
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;36
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;37
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;38
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7c7c79&#34;&gt;60
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Collections.Generic;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Linq;

&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; Sample
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Program&lt;/span&gt;
    {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;object&lt;/span&gt; _lock = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;object&lt;/span&gt;();

        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&amp;gt; InnerEnum2()
        {
            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: InnerEnum2&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
            {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Enumerable.Range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; i;
            }
            &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
            {
                Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: InnerEnum2&amp;#34;&lt;/span&gt;);
            }
        }

&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&amp;gt; Enum2()
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: Enum2&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;lock&lt;/span&gt; (_lock)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; InnerEnum2();
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                }
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: Enum2&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            }
&lt;/span&gt;        }

        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Loop2()
        {
            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: Loop2&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
            {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Enum2())
                    Console.WriteLine(i);
            }
            &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
            {
                Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: Loop2&amp;#34;&lt;/span&gt;);
            }
        }

        &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[]&lt;/span&gt; args)
        {
            Loop2();
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;結果-1&#34;&gt;結果&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ENTER: Loop2
ENTER: Enum2
EXIT: Enum2
ENTER: InnerEnum2
1
2
3
EXIT: InnerEnum2
EXIT: Loop2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enum2を下記のように修正すればok&#34;&gt;Enum2を下記のように修正すればOK&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; IEnumerable&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&amp;gt; Enum2()
{
    Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENTER: Enum2&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
    {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;lock&lt;/span&gt; (_lock)
        {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; InnerEnum2())
                &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; i;
        }
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;
    {
        Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EXIT: Enum2&amp;#34;&lt;/span&gt;);
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>IDEやエディタに求める機能</title>
      <link>http://marony.github.io/post/post_20190215090437/</link>
      <pubDate>Fri, 15 Feb 2019 09:04:37 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190215090437/</guid>
      <description>

&lt;h2 id=&#34;ideやエディタに求める機能&#34;&gt;IDEやエディタに求める機能&lt;/h2&gt;

&lt;p&gt;プログラミングをする際に必ずお世話になるのがIDEやエディタです。&lt;br /&gt;
IDE(VisualStudioやIntelliJ IDEAなど)もエディタ(VSCode, ATOM, vim, Emacs)なども、様々なプログラミング言語で文法による色分け表示や定義にジャンプできるのは当たり前です。&lt;br /&gt;
IDEであれば、リファクタリングの補助やパフォーマンス解析やデータベース管理、ソース管理との統合などの含まれていますが、
ここでは、その他に僕が欲しい機能を列挙します。&lt;/p&gt;

&lt;h3 id=&#34;コードに付箋を貼り付けたい&#34;&gt;コードに付箋を貼り付けたい&lt;/h3&gt;

&lt;p&gt;エディタで表示されているコードのある部分に対して、矢印を引っ張った付箋を貼り付け「この部分はXXXなので注意」「この部分の仕様」などなど付箋を貼りたいです。&lt;br /&gt;
コメントよりもわかりやすくなるのではないかと思います。&lt;br /&gt;
これらのデータを保存するために、コメント部分を活用するのか別にソースファイルと対になるデータファイルを管理するかなど、実装方法は工夫する必要がありますが、ぜひ欲しいです。&lt;/p&gt;

&lt;h3 id=&#34;コードに図形を書きたい&#34;&gt;コードに図形を書きたい&lt;/h3&gt;

&lt;p&gt;コードを書くテキストエディタとPlantUMLやMermaidと統合されて自由に図形を描きたいです。&lt;br /&gt;
常に表示されていたらそれはそれでウザそうなので、カーソルを合わせたらポップアップするようなのがいいでしょうか。&lt;br /&gt;
(Mermaidでもまだ図形描画という点では弱いので本当はVISIOなんかが貼り付けられればいいのですがそれは高望みしすぎだと思います。)&lt;/p&gt;

&lt;h3 id=&#34;コードを自由に色分けしたい&#34;&gt;コードを自由に色分けしたい&lt;/h3&gt;

&lt;p&gt;今でもプログラミング言語の文法に応じて自動で色分けされますが、それに上書きする形で自分で色を変えたり下線を引いたりしたいです。&lt;br /&gt;
上の2つと同じようなものですね。&lt;/p&gt;

&lt;h3 id=&#34;演算子の優先順位を視覚的にわかるようにして欲しい&#34;&gt;演算子の優先順位を視覚的にわかるようにして欲しい&lt;/h3&gt;

&lt;p&gt;様々なプログラミング言語でだいたい同じですが演算子の優先順位はすぐに忘れてしまいます。&lt;br /&gt;
僕の場合は記憶が曖昧な部分は括弧を多用しますが、コードが冗長になってしまいます。&lt;br /&gt;
目で見て優先順位が判断できれば便利だと思います。&lt;br /&gt;
入れ子になった色分けや枠で囲うなどどう表示すればわかりやすいのかあまり考えていませんが、演算子の優先順位を視覚的に知りたいです。&lt;/p&gt;

&lt;h3 id=&#34;コンパイルエラー発生時の途中経過が知りたい&#34;&gt;コンパイルエラー発生時の途中経過が知りたい&lt;/h3&gt;

&lt;p&gt;新しいコンパイラ(clangやrustcなど)は、コンパイルエラーが発生した時のメッセージがかなりわかりやすくなりそれだけでも大助かりです。&lt;br /&gt;
ただ、それでもエラー発生箇所がわかりにくい場合が多々あります。&lt;br /&gt;
そこで、構文エラーや型エラーの際にコンパイラがどう解析してエラーになったのかがわかるように、そこまでの途中経過の構文解析木のようなものを表示して欲しいです。&lt;/p&gt;

&lt;h3 id=&#34;実行結果を表示して欲しい&#34;&gt;実行結果を表示して欲しい&lt;/h3&gt;

&lt;p&gt;大規模なソフトウェアになると自動テストやステージング環境でのテストではどうしても本番環境での動作を再現できないことが増えてきます。&lt;br /&gt;
他社ベンダのソフトウェアとたくさん連携したり、社内の環境で再現するのは不可能なほどの負荷がかかったり、あらかじめ自動で生成するのが難しい複雑なパターンのデータが発生したり…&lt;/p&gt;

&lt;p&gt;仕事の話になりますが、最近では仕様やコードの誤りによる障害というのはほぼ発生しなくて、本番環境でのみ発生する負荷や他社ソフトウェアからの要求、ある国が休日だった…などなど、環境による障害が多いです。&lt;br /&gt;
「うぉ！本番だとこんなことが起きるの！？」の連続です。&lt;/p&gt;

&lt;p&gt;その解消に役に立つと思っているのですが、本番環境などで実際に動かした際の情報を記録し、コード上に引数のパターンや呼び出し回数などを表示してほしいです。&lt;br /&gt;
実際には数千万、数億回呼ばれるわけなので、何をどう記録してどう表示するんだという難問ではあります。&lt;/p&gt;

&lt;p&gt;以上、言い出しっぺの法則が適用されないただのメモです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>情報濃度</title>
      <link>http://marony.github.io/post/post_20190204091135/</link>
      <pubDate>Mon, 04 Feb 2019 09:11:35 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190204091135/</guid>
      <description>

&lt;h2 id=&#34;情報濃度&#34;&gt;情報濃度&lt;/h2&gt;

&lt;p&gt;単なる思考のダダ漏れ。特に根拠があるわけではないポエムです。&lt;/p&gt;

&lt;p&gt;「最近の若者は…」というのは2000年以上前にプラトンだかアリストテレスだかが言ったとか言わないとか聞いたことがあります。&lt;br /&gt;
歳を取ると「最近の若者は…」と言いたくなってしまうようですが、僕は今のところ「最近の若者すげー！」「怠けてたら俺やべー！」と思って過ごしております。&lt;br /&gt;
若者に仕事を奪われないように勉強を続けたいものです。&lt;/p&gt;

&lt;p&gt;さて「最近の若者は…」と言えば、僕が子供の頃よりも
文化レベルがとても向上していると感じます。&lt;/p&gt;

&lt;p&gt;歩きタバコ、今ではほとんど見ません。&lt;br /&gt;
飲酒運転や一時停止違反、親世代を見ていると「警察に捕まらなければ特に守る必要はない」程度の認識だったと思います。&lt;br /&gt;
お金を払って駐車場に車を止めるというのも抵抗感があるようで違法駐車も当然のことでした。&lt;/p&gt;

&lt;p&gt;若干ルールばかり厳しくなり本質の改善につながってはいないのではないかと感じることもありますが、文化としては昔よりも高度になっていると感じます。&lt;br /&gt;
「できて当たり前」の基準がガンガン上がっています。&lt;/p&gt;

&lt;p&gt;文化レベルだけではなく仕事の内容も高度になっています。&lt;br /&gt;
お客さんも昔より賢く用心深くなっているので、とりあえず気合で飛び込み営業すれば仕事をゲットできるような世の中ではありません。&lt;br /&gt;
仕事道具が便利になって、人の手で行わなくてもよくなったこともありますし、昔の何百倍もの速度で仕事が回るようになりました。&lt;br /&gt;
「お客さんから電話がかかってくるかも知れないので午前中は会社で待機します」なんて悠長な仕事は今ではありません。&lt;/p&gt;

&lt;p&gt;「最近の若者は…」という言葉は、昔は考慮しなければならない情報自体が少なく「とりあえず気合を入れて頑張る」でどうにかなっていたということだと思っています。
今は「とりあえず頑張ればどうにかなる」ことなんてそれほどありません。&lt;br /&gt;
集めた情報を元に作戦を立てた上で行動しなければまず失敗します。&lt;/p&gt;

&lt;p&gt;それもこれもインターネットや流通の発展によって情報が手軽に集まるようになったことが原因なのだと思います。&lt;/p&gt;

&lt;p&gt;僕の勝手な思い込みですが、人の脳みそには情報を貯めておく容量が決まっていて、それぞれ適正な「情報濃度」があるのだと思っています。&lt;br /&gt;
情報過多で頭がいっぱいいっぱいな状況が長く続くと疲れ果ててまともに考えられなくなりますし、ボーッとして脳みそから情報を追い出さないとストレスになります。&lt;br /&gt;
逆に情報がスカスカの状況では、まともに思考が働くのに必要な情報が足りないということになります。&lt;/p&gt;

&lt;p&gt;この「情報濃度」ですが、個人差は激しいのではないかと考えていますが、平均として考えると多くの情報に晒されている今の人の方が昔の人よりも多いのではないかと思います。&lt;/p&gt;

&lt;p&gt;頭の中に溜まっている情報が多いので、判断材料が多く、昔の人よりも並列で何手先をも読みつつ行動できます。&lt;br /&gt;
自分も相手も平均的に判断基準自体が上がっているのです。&lt;br /&gt;
これは仕事などの相手に関しても同様なので、社会全体の判断基準が上がっています。&lt;/p&gt;

&lt;p&gt;その代わり「とりあえず行動してみる」というのは難しくなりつつあると思っています。&lt;br /&gt;
成功例、失敗例、無数の情報がある中で「何も考えずに行動する」というのは勇気がいることです。&lt;br /&gt;
昔ならば、情報自体が少なかったので敷居は低かったと思います。&lt;/p&gt;

&lt;p&gt;この辺りが昔の人から見ると「最近の若者は…」なのではないかと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>情報管理について</title>
      <link>http://marony.github.io/post/post_20190125101228/</link>
      <pubDate>Fri, 25 Jan 2019 10:12:28 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190125101228/</guid>
      <description>

&lt;h2 id=&#34;情報管理について&#34;&gt;情報管理について&lt;/h2&gt;

&lt;p&gt;情報管理には10億年くらい悩んでいます。&lt;br /&gt;
デーモン閣下が生まれる前からです。&lt;/p&gt;

&lt;p&gt;タスクや予定や覚えておかなければいけないメモ。&lt;br /&gt;
今やっていることを忘れないための作業メモや設計などを考える時の落書き。&lt;br /&gt;
やらなければいけないわけでもないけど常に意識していたいこと。&lt;br /&gt;
仕事のプロジェクト(並行で3つとかそれ以上)で作業中のファイルやチケット管理(1プロジェクトで10個あったりする)などへのリンク。&lt;br /&gt;
今読んでいる最中の本(だいたい5冊くらい並行に読んでる)やその記録。&lt;br /&gt;
返信しなければいけないメール・チャットや、読みたいブログ。&lt;br /&gt;
作ってるプログラムの改善点やアイデア。&lt;br /&gt;
見たい映画や買いたい物、出かけたい場所、家族の誕生日。&lt;/p&gt;

&lt;p&gt;これらの情報を手間なくスムーズに更新し見つけられる状態にしておきたい。&lt;br /&gt;
色んな本やブログを見ても自分の思い通りのシステムはありません。&lt;br /&gt;
もちろん要素要素は役に立つのですが、僕の管理しているものは細かすぎるみたいです。&lt;/p&gt;

&lt;p&gt;「今度、日本語漢字変換システムを作りたい」なんて夢・希望(100個あったりする)は普通の人は管理しないみたいですし、
「使い捨てコンタクトレンズを買わないとなくなる」なんてのも普通の人は覚えているでしょう。
これに付随して「コンタクトレンズが安い店を探す」「妻にもコンタクトレンズがあるか聞く」なんて言うタスクが追加になります。&lt;br /&gt;
仕事のチケット管理システムや資料の置き場へのリンクも毎日使うものなので無意識で覚えてるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;僕は記憶力がニワトリ以下です。&lt;br /&gt;
上記のようなことを管理しているのでタスクが1000個超えます。&lt;/p&gt;

&lt;p&gt;タスク管理(だけ)に関しては &lt;a href=&#34;http://marony.github.io/post/post_20181228154039/&#34;&gt;管理できない人のタスク管理&lt;/a&gt; で説明したとおりですが、タスク以外というかタスクと関連するファイルやリンクやメールやチャットとの連携がイマイチ取れていません。&lt;/p&gt;

&lt;p&gt;「今やらなければいけないのはコレ！」 → 「それに関連する情報群はコレ！」という流れを作りたいです。&lt;/p&gt;

&lt;p&gt;前半についてはEmacs上で動くhowmがいい感じでした。&lt;br /&gt;
「浮沈ToDo」という仕組みで、自動でタスクを上下してくれるのです。&lt;br /&gt;
ただし、howmは順序がなくリンクやタグでしかタスクが関連していないので、複数のタスクの関連(プロジェクト)が弱いです。&lt;br /&gt;
このプロジェクトでは次に何をしたらいい？がすぐにはわかりません。&lt;br /&gt;
これを改善するためにプロジェクトごとにタスクを作って、そのプロジェクトに関連するタスクへのリンク集を作ったりもしたのですが面倒すぎて続きませんでした。&lt;/p&gt;

&lt;p&gt;後半についてはタスクごとにPCのローカルにディレクトリを作って、そこに参考資料や作成している資料、リンクを収めたテキストファイルにアイデアやメモなどを格納しています。
チャットなどはリンクが貼れないので、発信者と時刻と内容をメモしたりしています。
これはこれでなんとか流れているのですが、煩雑でシステムとして出来上がってません。&lt;/p&gt;

&lt;p&gt;今現在も色々と悩んでいるのですが、実は「考えなんてどんどん変わるので飽きたら全部捨てて違う方法を試す」くらいでちょうどいいのかな、とも思っています。&lt;br /&gt;
どうしてもデジタルで管理しだすと、ポケット１つ原則が気になりだし、タグ付けにこだわり、検索できるように整理したりしますが、これがもう億劫ですし、そもそも後で見返してもたいして役に立つ情報なんてありませんでした。&lt;br /&gt;
その時にやりたかったことや思いついたアイデアが今となっては役に立たない、なんてことが多々あります。&lt;br /&gt;
もちろん備忘録は別です。&lt;br /&gt;
親類の住所や家族の誕生日や社内の開発環境の設定や構築手順など絶対にいつか見返して役に立つ情報ですね。&lt;/p&gt;

&lt;p&gt;それ以外はたびたび捨ててしまっていいのではないかな、と思っています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>兄弟仲</title>
      <link>http://marony.github.io/post/post_20190117003837/</link>
      <pubDate>Thu, 17 Jan 2019 00:38:37 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190117003837/</guid>
      <description>

&lt;h2 id=&#34;兄弟仲&#34;&gt;兄弟仲&lt;/h2&gt;

&lt;p&gt;うちには長男(中2)と次男(中1)と長女(小6)がいます。&lt;/p&gt;

&lt;p&gt;兄弟とても仲が良くて、
(家の中まで寒いので)同じ布団に入りながら3人でケラケラ笑って動画を見たりしています。&lt;br /&gt;
3人でMinecraft(マインクラフト)をしたり、2人で歌って1人が踊ってたりもします。&lt;br /&gt;
親には内緒で恋バナに話を咲かせたりもしているっぽいですし、
3人とも中学では吹奏楽部に入るそうです。(あとは長女だけ)&lt;br /&gt;
周りを見ていてもあり得ないほどの仲の良さだと思います。&lt;br /&gt;
同じくらいの兄弟のいる親族や子供たちの友達の親に「仲がいいねぇ」と言われたりもします。&lt;/p&gt;

&lt;p&gt;幼児の時からずっとそうです。&lt;br /&gt;
「子供が可愛いのは小さいうちだけ」なんて数え切れないほど言われましたが、中学生になった今でも相変わらず可愛いです。&lt;br /&gt;
もちろん反抗期的なものはありますし、親に完全に従順というわけではありません。&lt;br /&gt;
たびたび様々な問題が起こったりはするのですが、
それは当たり前なので特に問題ありません。&lt;/p&gt;

&lt;p&gt;これは完全に僕の周辺や子供たちの友達の家族を観察したことによる僕の個人的な考えなのですが、
「親同士が仲がいいと子供同士は仲が良くなるし、親同士が仲が悪いと子供同士も仲が悪い」です。&lt;br /&gt;
同様に、母親が父親をバカにしていれば子どもたちは父親をバカにします。(もちろん逆もです)&lt;/p&gt;

&lt;p&gt;子は親を見て育つと言いますが「こんなにわかりやすいものなのか」と感心するほどです。&lt;br /&gt;
うちは妻が僕を罵倒したり、僕が妻を罵倒したりはしませんし、
喧嘩して怒鳴り合ったりもしません。&lt;br /&gt;
あとは「お兄ちゃんなんだから」とか「女の子なんだから」とかその人の属性によった叱り方はしませんでした。その時の状況を見て、やるべき方にやらせ、叱るべき方を叱ります。&lt;br /&gt;
こんな環境だからこそ、兄弟が仲良く育ったんだと思います。&lt;/p&gt;

&lt;p&gt;ただ、心配もあります。&lt;br /&gt;
家族仲良く悪意というものに晒されたことがないので、社会に出てからいきなり修羅の国を体験するわけです。&lt;br /&gt;
心が折れてしまうんじゃないだろうかと思います。&lt;/p&gt;

&lt;p&gt;親がいい大学やいい企業に子供を行かせたい気持ちがわかりました。&lt;/p&gt;

&lt;p&gt;ドラマや映画では貧しかったり頭の悪い人が善人に描かれることが多いですが、悲しいかな現実は逆です。&lt;br /&gt;
頭が良いほど、お金持ちなほど、善人の確率は高いです。&lt;br /&gt;
(もちろん当たり前ですが貧乏な善人やお金持ちの悪人はいますよ)&lt;/p&gt;

&lt;p&gt;さてさて、なるべく子供の将来には干渉はしないようにしていますが、これからどうなるんでしょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>発達障害の人は人より遅く成長する</title>
      <link>http://marony.github.io/post/post_20190115221915/</link>
      <pubDate>Tue, 15 Jan 2019 22:19:15 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190115221915/</guid>
      <description>

&lt;h2 id=&#34;発達障害の人は人より遅く成長する&#34;&gt;発達障害の人は人より遅く成長する&lt;/h2&gt;

&lt;p&gt;僕は過去にASD(アスペ)と診断されました。&lt;br /&gt;
また、自己判断ですがADHDもそこそこありそうだと思っています。&lt;/p&gt;

&lt;p&gt;借金玉という人の「発達障害の僕が「食える人」に変わった すごい仕事術」という本の内容と(なぜか)かなり被るのですが、
若い頃は記憶力が悪いのをアインシュタインと同じだと喜んでいましたし、
30歳までに絶対に死ぬと思いこんでいました。&lt;br /&gt;
もちろん根拠なんてありませんでした。&lt;/p&gt;

&lt;p&gt;そんな僕ですが、今では40歳を超えてしまいました。&lt;br /&gt;
結婚もして3人の子供もいます。
とりあえず普通の人並みの衣食住をしています。&lt;br /&gt;
小学生から始めたプログラミングでASDお得意の過集中を武器にお仕事をしています。&lt;/p&gt;

&lt;p&gt;ここ最近はコミュ力こそ相変わらず不足しているものの、奇妙な行動や思考はかなり減ったと思っています。&lt;br /&gt;
(若い頃の奇妙な行動や思考については酷すぎて忘れてないと死にたくなるので書けません)&lt;/p&gt;

&lt;p&gt;それもこれもよくよく考えてみれば「自分以外に人間がいると気がついたから」なんです。&lt;br /&gt;
これ、わかるでしょうか？&lt;br /&gt;
わからないですよね、普通の人はおそらく幼児期に習得するのだと思います。&lt;/p&gt;

&lt;p&gt;自分以外に人がいることは認識していますし、
世界中に人間がたくさんいることも知識として知っています。&lt;br /&gt;
ところが、他の人が自分と同じように「自身で考え自律的に動く」ということを実感としてわかっていませんでした。&lt;/p&gt;

&lt;p&gt;30歳を過ぎてからめきめきこの感覚が身につきました。&lt;br /&gt;
結婚して子供ができたからかも知れません。&lt;br /&gt;
とても人間的で野性的な妻と長く一緒にいたからかも知れません。&lt;/p&gt;

&lt;p&gt;人を人と認識すると、愛や友情というもの、コネや仲間というもの、チームや組織というもの、僕は相変わらず好きでも得意でもありませんが、そういうものが理解できました。&lt;br /&gt;
また、世界には競争相手がたくさんいて、自分はたいした人間ではないのだから勉強をし続けなければならないとわかりました。&lt;/p&gt;

&lt;p&gt;他の人より(かなり)遅く心と脳の成長が始まりました。&lt;br /&gt;
嫌いなことにも価値を見いだせるようになりました。&lt;br /&gt;
僕には18歳からの大学生は早すぎたんだと思います。&lt;br /&gt;
大学受験が30歳ならば、まともに勉強してまともに卒業していた気がします。&lt;/p&gt;

&lt;p&gt;人より遅く成長が始まった分まだまだ成長します。&lt;br /&gt;
その前に身体的な劣化(≒老化)が進んでしまいますが…&lt;br /&gt;
もちろん症状やレベルは人それぞれなので当てはまらない人もいると思います。&lt;br /&gt;
でも僕はこれを信じていますし、信じているからこそ勉強を続けたいと思っています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>老いると言うこと</title>
      <link>http://marony.github.io/post/post_20190111065024/</link>
      <pubDate>Fri, 11 Jan 2019 06:50:24 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190111065024/</guid>
      <description>

&lt;h2 id=&#34;老いると言うこと&#34;&gt;老いると言うこと&lt;/h2&gt;

&lt;p&gt;僕もとうとう40代半ばになり、
体力や脳みその衰えを感じるようになってきました。&lt;br /&gt;
中身は中学生くらいで止まっているのに、もう中年なんだから不思議な気持ちです。&lt;/p&gt;

&lt;p&gt;若い頃は「老いる」ということを漠然と考えていました。&lt;br /&gt;
「老いる」という抽象的な言葉の意味をあまり探らずに
「老いる」んだろうなぁ、
と思っていました。&lt;br /&gt;
「老いる」という単語を信じて思考停止していました。&lt;/p&gt;

&lt;p&gt;実際に老いてみると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;歯や骨や物理的な劣化&lt;/li&gt;
&lt;li&gt;関節などの物理的な摩耗&lt;/li&gt;
&lt;li&gt;汚物の付着による色素の沈着、それによる働きの阻害&lt;/li&gt;
&lt;li&gt;思考や行動の長期間の習慣による思考や細胞・器官の固定化(最適化)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;細胞が再生しなくなっているなぁ、長年の汚れが溜まっているんだななぁ、というのをはっきりと感じます。&lt;/p&gt;

&lt;p&gt;こう考えると、
不老不死の薬なんてひとつの薬で老いが止められるとは思えません。&lt;/p&gt;

&lt;p&gt;あ、母親が不老不死だった「塔の上のラプンツェル」
いい映画です。&lt;br /&gt;
ディズニー映画だと「アナと雪の女王」が同時期に流行っていましたが、
それよりも全然おもしろいです。&lt;br /&gt;
オススメです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ITエンジニアに学歴が必要か</title>
      <link>http://marony.github.io/post/post_20190109204906/</link>
      <pubDate>Wed, 09 Jan 2019 20:49:06 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190109204906/</guid>
      <description>

&lt;h2 id=&#34;itエンジニアに学歴が必要か&#34;&gt;ITエンジニアに学歴が必要か&lt;/h2&gt;

&lt;p&gt;僕は大学中退です。&lt;/p&gt;

&lt;p&gt;高校生の途中で理系と文系にわかれることを知った上に
「理系には女の子がいない」という驚愕の事実さえも耳にして、
得意だった物理と数学を捨てて必死で世界史と国語を頑張って、後は得意だった英語で文系の大学に入りました。&lt;br /&gt;
今思えば女の子に縁なんてなかったのになぜそこまで衝動的に行動したのか全く意味がわかりません。&lt;br /&gt;
誰か教えてください。&lt;/p&gt;

&lt;p&gt;文系大学には無事に入学できましたが、
特に彼女ができたりはしませんでした。&lt;br /&gt;
男よりも女の子の方が多いというのは僕の目指した環境だったはずです。&lt;/p&gt;

&lt;p&gt;ところが結局勉強がつまらなくて中退しました。&lt;br /&gt;
そこから2年ほどプログラマのアルバイトをしていましたが、
なぜかベンチャー企業(今の会社の前身)の目に止まり焼き肉を奢ってもらったので就職しました。&lt;/p&gt;

&lt;p&gt;関係ないですが最近は放送大学に入ってまして、
仕事が不定期に超忙しくなる上に勉強したいことは他にも山積みで卒業は絶望的なのですが、
大学を卒業してみたいという気持ちは一応あったりします。&lt;/p&gt;

&lt;p&gt;ところで、最近は分散技術や機械学習のおかげで博士号持ちの方を多く目にするようになりました。&lt;br /&gt;
またアメリカではそもそも博士号持ちでないとITエンジニアにはなれないという話も聞きます。&lt;/p&gt;

&lt;p&gt;ITエンジニアは専門的な知識が必要な職ですのでこの流れは正しいのだと思います。&lt;br /&gt;
ソフトウェア開発の環境はどんどん自動化・省力化され便利なツールもどんどん出てきて、
本来注力すべきドメイン部分に力を入れられるようになってきました。&lt;br /&gt;
これからさらにソフトウェア開発が対象とするビジネスは複雑化・高度化し、
専門知識がないと戦えないようになっていくはずです。&lt;br /&gt;
このような方々がIT業界に増えれば世界でも戦えるようになるし、
何より頭のいい人たちなので業界を良くしてくれるだろうと思っています。&lt;/p&gt;

&lt;p&gt;結論としては今までのような職人タイプではなくて絶対に博士号を持っているような人たちが必要ですよね。&lt;/p&gt;

&lt;p&gt;ただし懸念もあります。&lt;/p&gt;

&lt;p&gt;IT業界にはまだまだ力作業がたくさん残っています。&lt;br /&gt;
人と人とで成り立つ部分も多いです。&lt;/p&gt;

&lt;p&gt;これらは高学歴の人たちがやることではないですし、かと言ってすぐになくなるとも思えません。&lt;br /&gt;
IT業界の中で研究職と土方にわかれていくのでしょうか？&lt;br /&gt;
学歴のない人たちが土方をして泥臭い部分を担っていくのでしょうか？&lt;br /&gt;
会社単位では既にこうなりつつある雰囲気は感じますね。&lt;/p&gt;

&lt;p&gt;僕はプログラミング以外にできることもないので、
どんどん業界の片隅に追いやられるのは辛いなぁと思います。&lt;br /&gt;
土方として働くにしても、体力の衰えや親の介護が視界に入ってきているので
若い人ほど長時間働けません。&lt;br /&gt;
勤務時間なしにしても最近の若い人は優秀ですしね。&lt;br /&gt;
子供もいておっさんですので今から他業種への転職もなかなか厳しいところ。&lt;/p&gt;

&lt;p&gt;学歴は必要だと思うし高学歴の人がどんどんIT業界に入ってきてほしいけど、
僕はこれからどうすればいいのでしょうね…&lt;br /&gt;
コンピュータ技術の勉強は一生続けると思いますが、
基礎脳力が違う人たちで溢れる業界で生き残ることができるでしょうか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>今年の目標</title>
      <link>http://marony.github.io/post/post_20190107224444/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190107224444/</guid>
      <description>

&lt;h2 id=&#34;今年の目標&#34;&gt;今年の目標&lt;/h2&gt;

&lt;p&gt;今年の目標は下記の3つです。&lt;br /&gt;
去年は「歯医者に行く」が目標でしたが達成できませんでした。&lt;/p&gt;

&lt;h3 id=&#34;代数&#34;&gt;代数&lt;/h3&gt;

&lt;p&gt;Haskellでモナドに触れてから圏論に興味を持ち、Twitterでは「モナドの理解に圏論なんて必要ない」と言われつつも圏論を今年こそはマスターしたいです。なんとなくわかる気がするなーから脱したいです。&lt;br /&gt;
圏論の本を読んでも結局わからなくて群論に戻って、それでもわからなくて集合論に戻ったりして、たまに圏論の本に戻ってみると以前よりは理解できたりするけれど、今年前半は代数を基礎から固めるために行列やベクトルや集合を重点的にやります。&lt;/p&gt;

&lt;p&gt;圏論や群論は僕にはまだ早かった…&lt;/p&gt;

&lt;p&gt;本当は機械学習のために微分積分や統計なんかも学びたいのだけれどそれはまた来年以降で。&lt;/p&gt;

&lt;h3 id=&#34;英語&#34;&gt;英語&lt;/h3&gt;

&lt;p&gt;英語を読むのは技術書やマニュアルならなんとかなるんだけど、聞くことと書くことが壊滅的なので今年は英語を勉強します。&lt;/p&gt;

&lt;p&gt;ちなみに、書くことに関しては日本語でもダメダメなので、ブログで文章を書くことを習慣化したいと思っていることはこの前書きました。&lt;/p&gt;

&lt;p&gt;また、聞くことも日本語でも訛りなど全く聞き取れなくて、実祖父の言葉は間に実父に通訳してもらっていたくらいでした。
神奈川県のど田舎の訛りは凄いです。&lt;br /&gt;
横浜だと「〜じゃん」ですが、この辺りは基本的に「〜だべ」です。&lt;/p&gt;

&lt;p&gt;標準語でもいきなり話しかけられると理解できずに聞き直してしまうことも多いです。&lt;br /&gt;
頭が人の話を聞くモードになってないと、常に何かしら頭の中で考えているので聞こえているのに理解できないのです。&lt;/p&gt;

&lt;p&gt;さらに、宇多田ひかるや桑田佳祐の歌もなんだか聞き取れないです。あれ、日本語ですか？&lt;br /&gt;
と、英語の問題じゃない気がしますがとりあえずやります。&lt;/p&gt;

&lt;h3 id=&#34;趣味のプログラミング&#34;&gt;趣味のプログラミング&lt;/h3&gt;

&lt;p&gt;趣味のプログラミングが滞りがちなので、作るものと期間を定めて計画的に作って公開していきます。&lt;/p&gt;

&lt;p&gt;現状ではReact + ReduxとScalaのPlayをマスターしたいので両方を組み合わせてWebサービスを作りたいと考えています。&lt;br /&gt;
コンパイラや分散キャッシュとかも作りたいですが、短期間で作れるものでもないので今後ですね。&lt;/p&gt;

&lt;p&gt;だいたい季節に1つ作れればいいかなくらいの感じです。&lt;/p&gt;

&lt;h3 id=&#34;最後に&#34;&gt;最後に&lt;/h3&gt;

&lt;p&gt;これらを始めようと思ったのは、真面目に転職を考え始めたからです。
GAFAとまではいかなくても、外資もターゲットにしたいですからね。&lt;br /&gt;
家族には「とうちゃん、Googleで働こうと思うんだ」と言っておきました。&lt;/p&gt;

&lt;p&gt;こんな感じで今年もよろしくおねがいします。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>人生無駄な経験なんてないですよ</title>
      <link>http://marony.github.io/post/post_20190107184353/</link>
      <pubDate>Mon, 07 Jan 2019 22:39:05 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190107184353/</guid>
      <description>

&lt;h2 id=&#34;人生無駄な経験なんてないですよ&#34;&gt;人生無駄な経験なんてないですよ&lt;/h2&gt;

&lt;p&gt;最近「三角関数なんて使わない」「古文なんて役に立たない」というやり取りをTwitterで見ました。&lt;/p&gt;

&lt;p&gt;それらの発言の「使わない」「役に立たない」の意味が各々ぶれていて、「【俺は】使わない」が「【人類は】使う」と反論されていたりと噛み合っていなさそうな感じではありました。&lt;br /&gt;
ただ流れとしては「数学が必要ない程度の人生を送っている癖に三角関数は使わないとか言うな」でした。&lt;/p&gt;

&lt;p&gt;僕も何度かこれについてツイートしたのですが
要不要は結局のところ人によるとしか言えません。&lt;/p&gt;

&lt;p&gt;数学を使わないと成り立たない技術や道具は多々ありますが、その道具を使う人には数学は要求されません。&lt;br /&gt;
これは数学を使う人たちに感謝するしかないですね。&lt;/p&gt;

&lt;p&gt;でも数学を使わなくても生きている人はたくさんいます。&lt;br /&gt;
それこそ僕の親族には知的障害者がいますが、数学なんて使わなくても健やかに生きています。&lt;br /&gt;
会話がやっと成り立つ程度の小学校の勉強にすら落ちこぼれた人もいます。&lt;br /&gt;
数学を知らない人の人生を取り上げることは許されませんし、
数学を知っていることでマウンティングすることも許せません。&lt;/p&gt;

&lt;p&gt;あ、僕自身は文系出身というか中退ですが数学は好きです。&lt;/p&gt;

&lt;p&gt;また「古文なんて役に立たない」については「古文を知っていると人生が豊かになる」という返信がついていました。&lt;br /&gt;
これ自体については同意なのですが、
「人生が豊かになる」ことを「役立つ」とするならば「万引き」「中卒」「結婚」「犬を飼う」…人生のありとあらゆるものが人生を豊かにすると思っています。&lt;/p&gt;

&lt;p&gt;僕のツイッターのプロフィールには「人生無駄な経験なんてないですよ」と書いてあります。&lt;br /&gt;
これは人から見たら非常識や不幸のどん底など色々経験してきた僕が、
やっぱりそれらがあってこその今だよなと思っているからです。&lt;br /&gt;
それらのどれが欠けても違う人生が待っていたと思いますが、
今の人生に特に後悔はありません。&lt;br /&gt;
不幸なことがないという意味ではありません。
不幸や幸福が入り混じっていますがやり直したいという気持ちがないのです。&lt;/p&gt;

&lt;p&gt;みんな色んな経験をすると思いますが、それが役に立ったのか無駄だったのかは死ぬまでわかりません。&lt;br /&gt;
三年間何もしないでニートしていたことを「結局あれはよかったんだな」と死に際に思うことだってありえます。&lt;br /&gt;
そういう意味では今この時点で無駄な経験なんて何ひとつありません。&lt;/p&gt;

&lt;p&gt;「古文」もまた人生におけるこのような物事のうちのひとつなのだろうなと思います。&lt;br /&gt;
あれば違う人生が待っている、なければまた違う人生になる。&lt;br /&gt;
それだけのことです。&lt;/p&gt;

&lt;p&gt;人生は有限です。&lt;br /&gt;
世界や宇宙の全てを学ぶことはできません。&lt;br /&gt;
あることを学ぶという選択をすることは、その時間でできたはずの他の物事を捨てることです。&lt;/p&gt;

&lt;p&gt;また、人間は全能ではありません。&lt;br /&gt;
現時点でわかっている事実から未来を正確に予測することはできません。&lt;br /&gt;
ある勉強が10年後に(主にビジネスの)役に立つのか、役に立たないのかなんて誰にもわかりません。&lt;/p&gt;

&lt;p&gt;自分の人生や仕事に誇りを持つことはいいことですが、そうではない人の人生をバカにするのはやめてほしいです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>子供たちのプログラミング(Scratch作品)</title>
      <link>http://marony.github.io/post/post_20190106024143/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190106024143/</guid>
      <description>

&lt;h2 id=&#34;子供たちのプログラミング-scratch作品&#34;&gt;子供たちのプログラミング(Scratch作品)&lt;/h2&gt;

&lt;p&gt;僕がプログラマなこともあり、
うちの子供たちは小学校低学年くらいからプログラミングをしています。&lt;/p&gt;

&lt;p&gt;子供たちには専用のパソコンを用意(動作がたまに遅いので「カチコチのパソコン」と呼ばれています)してScratchというプログラミング環境があることを教えました。&lt;br /&gt;
それ以来、プログラミングのことはほぼ何も教えていないのですが、色々と作っているようです。&lt;/p&gt;

&lt;p&gt;僕も子供たちが何を作っているのかはあまりチェックできていないのですが、
面白そうなのを紹介してみます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://scratch.mit.edu/projects/196521799/&#34;&gt;MIYABI　錦鯉　～三色～ on Scratch&lt;/a&gt;&lt;br /&gt;
これ、マウスに鯉がついてくるんですが、鯉が数十枚の絵からなっていてなんと「手書き」なんですね。&lt;br /&gt;
長男の集中力すごすぎです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://scratch.mit.edu/projects/66020310/&#34;&gt;最小公倍数 on Scratch&lt;/a&gt;&lt;br /&gt;
これ、次男が小学校の宿題をやるために作ったやつですね…&lt;br /&gt;
真面目に宿題やってください&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://scratch.mit.edu/projects/170040528/&#34;&gt;十進数と二進数 変換 on Scratch&lt;/a&gt;&lt;br /&gt;
算数大好き次男。&lt;br /&gt;
こういうの好きですね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://scratch.mit.edu/projects/49476226/&#34;&gt;忍者ダッシュ！ on Scratch&lt;/a&gt;&lt;br /&gt;
長男は絵を描くのがうまいなぁ&lt;/p&gt;

&lt;p&gt;全部の作品はこのリンクから。&lt;br /&gt;
&lt;a href=&#34;https://scratch.mit.edu/users/marony/&#34;&gt;marony on Scratch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scratchはブロックを組み合わせてプログラミングするので、子供向けと思われてしまうのですが、プログラミング自体の機能が劣っているとかは特にないです。&lt;br /&gt;
同じ環境で絵や音も作れたり、質問もできる掲示板があったりと、プログラミング教育には最適だと思っています。&lt;/p&gt;

&lt;p&gt;ただ、よくできた環境だけに、学校でパソコン部に入ってゲームを作ったり、オススメはしないけど将来プログラマになったりすると出会うことになる「普通のプログラミング言語」とは全然違います。&lt;br /&gt;
そのため、今は開発環境を整え、テキストエディタやIDEでコードを書き、絵や音は専用の別ツールで作り、質問はどこか適切な場所を探さなければならない「普通のプログラミング言語」をどうやって子供たちに教えればいいのかで悩んでいます。&lt;/p&gt;

&lt;p&gt;子供たちはアルゴリズムを考えたりはもう問題ないのですが、やっぱり「普通のプログラミング言語」を経験させたい。&lt;br /&gt;
贅沢な悩みですし、好きでやってれば勝手に覚えるのかも知れませんけれど。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>profile</title>
      <link>http://marony.github.io/profile/</link>
      <pubDate>Sat, 05 Jan 2019 09:29:42 JST</pubDate>
      
      <guid>http://marony.github.io/profile/</guid>
      <description>

&lt;h2 id=&#34;人種&#34;&gt;人種&lt;/h2&gt;

&lt;p&gt;C#プログラマ@東京&lt;/p&gt;

&lt;h2 id=&#34;構成要素&#34;&gt;構成要素&lt;/h2&gt;

&lt;div&gt;
    &lt;canvas id=&#34;profileChart&#34; width=&#34;860&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;
    
    &lt;script src=&#34;../../js/chartData.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;../../js/Chart.min.js&#34;&gt;&lt;/script&gt;
    
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.asia/9FISHMC&#34;&gt;欲しい物リスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/_marony&#34;&gt;Twitter&lt;/a&gt;
&lt;a href=&#34;https://twitter.com/_marony?ref_src=twsrc%5Etfw&#34; class=&#34;twitter-follow-button&#34; data-show-count=&#34;false&#34;&gt;Follow @_marony&lt;/a&gt;&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/marony0607/&#34;&gt;SoundCloud&lt;/a&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/127523460&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/137619535&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;githubリポジトリ&#34;&gt;GitHubリポジトリ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/pi_js&#34;&gt;JavaScriptでPIを計算するよ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marony.github.io/lifegame_pde/&#34;&gt;processingでライフゲーム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/diskreport&#34;&gt;Scalaでディスク容量表示アプリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/katamino-solver&#34;&gt;Katamino(カタミノ)解いてる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/fix-const&#34;&gt;VSCodeのネタ機能拡張作ったり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/monhanxx&#34;&gt;モンハンXX攻略アプリ(Ruby + Python(Django))&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/tf-fizzbuzz&#34;&gt;TensorFlowでFizzBuzz(Python)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/raft_test&#34;&gt;ScalaのAKKAでRaftアルゴリズムを試した&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/youtuber&#34;&gt;YouTubeダウンロードサイト(Scala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/kuina-sudoku&#34;&gt;くいなちゃんのトランプ数独解法アルゴリズム(Clojure)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/SudokuCS&#34;&gt;C#で数独を解くプログラム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/SudokuFS&#34;&gt;F#で数独を解くプログラム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/Syogaku4&#34;&gt;小学4年生の息子の問題を解く(Scala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/TenPuzzle&#34;&gt;10パズル(Scala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/syogi&#34;&gt;アルゴリズム対戦将棋(Clojureのお勉強)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/worker&#34;&gt;社畜.net(ClojureでWebサービス)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/scala3d_wireframe&#34;&gt;Scalaで3D表示してみたり…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/cpp3d&#34;&gt;C++で3D表示してみたり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/rust3d&#34;&gt;Rustで3D表示してみたり&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;思い出の写真&#34;&gt;思い出の写真&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://marony.github.io/images/profile/1464560511355.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://marony.github.io/images/profile/IMG_20160922_172626.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://marony.github.io/images/profile/P_20180116_200111_vHDR_On.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>人間と他の生物</title>
      <link>http://marony.github.io/post/post_20190104011409/</link>
      <pubDate>Fri, 04 Jan 2019 01:14:09 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190104011409/</guid>
      <description>

&lt;h2 id=&#34;人間と他の生物&#34;&gt;人間と他の生物&lt;/h2&gt;

&lt;p&gt;明確に違うと言うことはない(基準を示せと言われると困る)けれど、
人間が他の生物と決定的に違うところは
他の生物は得すると損するの二択なのに対し、
人間は今は損して将来得する、自分が損しても相手に損害を与えたいなど、他の選択肢をたくさん選べることだと思う。&lt;/p&gt;

&lt;p&gt;感情的になると思考する暇がなく他の生物と同じ行動を取る。&lt;br /&gt;
一方、自分で懸命に考えた末の行動だと、例え結果が失敗だとしても後悔しにくい。&lt;br /&gt;
あとから考えて仕方なかったなと思える。&lt;/p&gt;

&lt;p&gt;何気ない行動ひとつひとつひとつについて、
一歩でもいいから立ち止まって
何か考えてから行動したい。&lt;/p&gt;

&lt;p&gt;ただし、これが老害化でもあると思う。&lt;br /&gt;
思考し行動することが習慣になり、自分の中で常識となってしまう。&lt;br /&gt;
その常識と異なった行動を誤っていると勘違いしてしまう。&lt;/p&gt;

&lt;p&gt;また、
良いことと悪いこと、
考えれば考えるほどに、
良いことにもデメリット
悪いことにはメリットがあることに気がつく。
良い方にも舵を切れず、かと言って悪い方にも舵を切れない。&lt;br /&gt;
自分の行動が思考に束縛される。&lt;/p&gt;

&lt;p&gt;これが賢明(≒老害)な大人。&lt;/p&gt;

&lt;p&gt;若い頃のように何も考えないからこそ為せたこと、たくさんあるはず。&lt;br /&gt;
かと言って一生何も考えないのも考えもの。&lt;/p&gt;

&lt;p&gt;まだまだ生きなければいけないのに、目の前の選択肢ひとつ選べない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文章辛い</title>
      <link>http://marony.github.io/post/post_20190103184804/</link>
      <pubDate>Thu, 03 Jan 2019 18:48:04 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20190103184804/</guid>
      <description>

&lt;h2 id=&#34;文章辛い&#34;&gt;文章辛い&lt;/h2&gt;

&lt;p&gt;Twitterは凄い&lt;br /&gt;
くだらないことばかり書いているけれど、たまに誰かに刺さってバズったりする。&lt;/p&gt;

&lt;p&gt;文章が書けなすぎるのでブログを頻繁に書くと決めたけれど、
&lt;a href=&#34;http://marony.github.io/post/post_20181226212544/&#34;&gt;これ&lt;/a&gt;
と
&lt;a href=&#34;http://marony.github.io/post/post_20181231231603/&#34;&gt;これ&lt;/a&gt;
を書いて
文章書ける気になってた&lt;/p&gt;

&lt;p&gt;でも、たいしたネタでもないのにブログを文章で埋めようとすると
たいした文章にはならないと気がついた&lt;/p&gt;

&lt;p&gt;読み返して消したい衝動に駆られるんだけど
なんとなく数年後の自分の楽しみに取っておく&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
