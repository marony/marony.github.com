<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>undefined on undefined </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://marony.github.io/</link>
    <language>ja</language>
    
    
    <updated>Fri, 28 Dec 2018 15:40:39 JST</updated>
    
    <item>
      <title>管理できない人のタスク管理</title>
      <link>http://marony.github.io/post/post_20181228154039/</link>
      <pubDate>Fri, 28 Dec 2018 15:40:39 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181228154039/</guid>
      <description>

&lt;h2 id=&#34;管理できない人のタスク管理&#34;&gt;管理できない人のタスク管理&lt;/h2&gt;

&lt;p&gt;誰かの役に立つのか不明ですが文章を書くことを習慣にしたいので書きます。&lt;/p&gt;

&lt;p&gt;僕はASD(アスペ)と診断されたことがありますが、たぶんADHDでもあります。&lt;br /&gt;
ITエンジニアですので仕事では設計したりプログラミングしたり障害対応したりしますが、
多くのプロジェクトに関わっているのでいろんな人が相談に来たり、突発で仕事が降ってきます。&lt;br /&gt;
ところが話しかけられたり別の作業をすると今まで何をしていたか忘れます。&lt;br /&gt;
絶対に忘れます&lt;br /&gt;
必ず忘れます&lt;/p&gt;

&lt;p&gt;他にも、興味が湧いたり必要があって何かを調べ出したりすると元の作業がわからなくなります。&lt;br /&gt;
絶対に、です。&lt;/p&gt;

&lt;p&gt;そこで何年も試行錯誤しまくって今のタスク管理方法に落ち着きました。&lt;/p&gt;

&lt;p&gt;バレットジャーナルというタスク管理術があります。&lt;br /&gt;
箇条書きだけでタスク管理しましょうという方法で、基本的には今日やることを(デイリーログに)書き出して終わらなかったら明日に移しましょう。遠い未来や決まった予定なら専用のリスト(フューチャーログ)に移動しましょう、という方法です。&lt;/p&gt;

&lt;p&gt;バレットジャーナルは最近知ったので使ったことはないのですが、シンプルでとても良いと思います。&lt;/p&gt;

&lt;p&gt;別のタスク管理術にGTD(Getting Things Done)があります。&lt;br /&gt;
簡単に言うと、洗いざらい頭の中を(INBOXに)吐き出して順番に処理しましょういう手法です。&lt;br /&gt;
最初に頭の中身を全部INBOXに書き出して、それを見ながらすぐにやるか、すぐやらなければ適切なリスト(NextAction, プロジェクト, いつかやるなど)に移します。&lt;br /&gt;
その後、NextActionを見ながら先頭からタスクを実行していきます。&lt;/p&gt;

&lt;p&gt;GTDについては僕は何度も挑戦していますが、リストの振り分けが無意識にやるには複雑すぎるし、レビューの時間も取れずにしばらくすると破綻してしまいます。&lt;br /&gt;
ただ、INBOXに頭の中身を洗いざらい吐き出す、というのは気持ちが良くてよかったです。&lt;/p&gt;

&lt;p&gt;さらにフランクリン・プランナーという手帳があります。&lt;br /&gt;
お金を払って「七つの習慣」を学んだりするらしいですが、僕はそこには興味ないのでただの手帳として使っていました。&lt;br /&gt;
この手帳を使っていたのは、今では全然珍しくないけれど当時としては画期的だった「1日1ページ」だったからです。&lt;br /&gt;
そこに今日やることを書いて、タスクをこなしながら作業メモを取ります。&lt;br /&gt;
この手帳が僕のタスク管理方法の原点です。&lt;/p&gt;

&lt;p&gt;これで割り込み作業に俄然強くなりました。&lt;/p&gt;

&lt;p&gt;どのタスク管理術も、やること全体はどこかに保存しておきます。&lt;br /&gt;
全体としてはタスクが多い状態でも一カ所(バレットジャーナルならデイリーログ、GTDならNextAction、フランクリン・プランナーなら今日のページ)を見れば次にやることがすぐにわかる、というのが魅力です。&lt;br /&gt;
大量のタスクを見ながら優先度を決めていく、なんて僕にはできません。&lt;br /&gt;
それに加えて、今やってるタスクには印を付けるので、割り込みがあってもすぐに元の作業に戻ることができます。&lt;/p&gt;

&lt;p&gt;さて、本題です。&lt;/p&gt;

&lt;p&gt;僕のタスク管理方法はこれらを組み合わせたもののようになっています。実際はバレットジャーナルは使ったことありませんので試行錯誤の結果なのですが。&lt;br /&gt;
重要なのは「気軽であること」「タスク全体を忘れないこと」「今やっていること、次にやることが明確であること」です。&lt;/p&gt;

&lt;p&gt;順番に説明します&lt;/p&gt;

&lt;p&gt;まずはタスクが生まれたら入れる場所(GTDのINBOX)を作ります。&lt;br /&gt;
僕は気軽に追加できる点を重視してPCかスマホからGoogle Keepに突っ込んでいます。&lt;br /&gt;
読まなければならない記事だけはPocketで管理しています。&lt;br /&gt;
「ポケット１つ原則」に従えば統一した方がいいのだと思いますが、2つでもさして問題ありません。&lt;/p&gt;

&lt;p&gt;INBOXはデジタルでもアナログでも良いですが「簡単」である必要があります。&lt;br /&gt;
タスクを追加するのに書き込む場所を探したり入力が面倒だったりすると、一日何度も何十回も繰り返す作業だけに思いのほか苦痛です。&lt;br /&gt;
それでは長続きしません。&lt;/p&gt;

&lt;p&gt;次に全てのタスクを入れる場所(マスタータスクリスト)を作ります。&lt;br /&gt;
僕はつい最近までToodledoを使っていましたが、階層化や移動が容易なのでDynalistに移行してみたところです。&lt;br /&gt;
全てのタスクを入れるので僕の場合は1000件を超えています。&lt;/p&gt;

&lt;p&gt;基本的に見やすく整理できればツールは何でも良いです。&lt;br /&gt;
ただし、これも分類やタグ付けにこだわってしまうと面倒で長続きしません。
適度に分類しましょう。&lt;br /&gt;
ライフハック系の記事を読むと、この「分類」にこだわっているのをよく見ますが、タスク管理にとって分類は本質的なものではありません。&lt;br /&gt;
適当に作って使いやすいように修正していけば良いです。&lt;/p&gt;

&lt;p&gt;最後に今日やることを書き出す場所(TODAY)を作ります。&lt;br /&gt;
今まではWorkFlowyに日付ごとの項目を用意していたのですが、来年からはほぼ日手帳にする予定です。&lt;/p&gt;

&lt;p&gt;まず、昨日のやることから今日に持ち越すものを転記します。&lt;br /&gt;
今日もできそうもなかったらマスタータスクリストに戻します。&lt;br /&gt;
そしてINBOXとマスタータスクリストから今日やらなければならないタスク、できそうなタスクをTODAYに転記します。&lt;br /&gt;
あとはTODAYを見ながら作業を進めればいいだけです。&lt;br /&gt;
割り込みが発生した場合は、TODAYかINBOXに追加します。&lt;/p&gt;

&lt;p&gt;これもツールはアナログでもデジタルでも良く、「今日」が簡単に判別できれば良いです。&lt;/p&gt;

&lt;p&gt;そして「レビュー」。&lt;br /&gt;
どんなタスク管理をしようとも必要な作業です。
さらに一番面倒で挫折しやすいところです。&lt;br /&gt;
昔は「レビュー」という単語が抽象的過ぎて何をやっていいのかよくわからなかったのですが、やらなくて良くなったタスクを捨てたり、タスクの分類が合っているか確認したり、タスクが大きすぎるなら細分化したりします。&lt;/p&gt;

&lt;p&gt;この時点で全てのタスクに目を通すことになるのですが、この行為自体が一番重要だと思っています。&lt;/p&gt;

&lt;p&gt;デジタルで転記する必要がないからとこの手順を省くと「死にタスク」だらけになって破綻します。&lt;br /&gt;
記憶に引っ掛かるように全て眺めることが重要で、ついでにタスクを整理するくらいの気持ちです。&lt;/p&gt;

&lt;p&gt;レビューは永遠に行う必要があるのですが、必ずしも定期的にやらなくてもいいかなと思います。&lt;br /&gt;
よく言われるのは「毎朝」「毎夜」「毎週月曜日」とかですね。&lt;br /&gt;
タスクの入れ替わりが激しい人なら短いスパンで、そうでなければ暇なときでいいと思います。&lt;br /&gt;
僕はもちろん「暇なとき」です。&lt;/p&gt;

&lt;p&gt;蛇足ですが、ツールを移行することで完全なレビューができます。&lt;br /&gt;
ツールの種類やアナログかデジタルかなどは、使いやすさや向き不向きがあるもののどれを選んでも問題ありません。&lt;br /&gt;
ツールからツールにタスクを転記することで結果的に全てのタスクを眺めることになります。&lt;/p&gt;

&lt;p&gt;以上が僕のタスク管理方法です。&lt;br /&gt;
ずぼらな人でもできる気がしてきましたね。&lt;br /&gt;
(本当か？)&lt;/p&gt;

&lt;p&gt;まだまだチケット管理などのWeb上のサービスやローカルのファイルとの連携など、どうすればいいのか試行錯誤している部分はあるものの概ねうまく回っています。&lt;br /&gt;
長期的な目標とかも組み込んでみたいんですけどね。&lt;br /&gt;
一番難しいのはこだわらないこと！！&lt;/p&gt;

&lt;p&gt;そう言えば、借金玉という人の「発達障害の僕が「食える人」に変わった すごい仕事術」という本が参考になりそうなので今度読んでみようと思っているところです。&lt;/p&gt;

&lt;p&gt;※ 一応僕もITエンジニアなので今度は技術的な記事も書きたいですね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文章を書くということ</title>
      <link>http://marony.github.io/post/post_20181226212544/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181226212544/</guid>
      <description>

&lt;h2 id=&#34;文章を書くということ&#34;&gt;文章を書くということ&lt;/h2&gt;

&lt;p&gt;僕は文章が苦手です。&lt;/p&gt;

&lt;p&gt;小学校の夏休みの読書感想文は本の前書きや後書きを丸写しでしたし、
作文の宿題は原稿用紙を埋めるだけが目的だったので、
次の行の始めで文が終わるように句読点を駆使したりもしました。&lt;/p&gt;

&lt;p&gt;でも仕事の文書、設計書や議事録なんかはなんとなく書けています。&lt;br /&gt;
なぜなら、文書の目的や読む人がはっきりと決まっていて、さらに読む人の知識レベルや関心も一定だからです。&lt;/p&gt;

&lt;p&gt;でも今も文章が書けなくて困っています。&lt;br /&gt;
文章を書くことに関する本をいくつか読んでみましたが、「書きたいことを探すには？」とか、「語尾を統一しましょう」とか、「起承転結をしっかり」のようなテクニックが書いてある本がほとんどでした。&lt;br /&gt;
それは僕が欲しかった情報ではありません。&lt;/p&gt;

&lt;p&gt;僕は書きたいことを無理にひねくり出すような仕事ではありませんし、うまい文章を書きたいわけでもありません。そもそも、そのレベルまで達していません。&lt;br /&gt;
それでもやっぱり文章が書けなくて困っています。文章をどう書いて良いかがわからない。&lt;/p&gt;

&lt;p&gt;わけがわからないのでそれを自分の中で掘り下げてみました。&lt;br /&gt;
結局のところ、「文章を書くために継続的に情報を集め記録し整理しそこから文章を書き始めて完成まで持っていく方法」がわからないんだと思います。&lt;/p&gt;

&lt;p&gt;そんな中、「アウトライナー実践入門」という本を読みました。&lt;br /&gt;
これはアウトアインプロセッサ(主にWorkFlowly)をどう使うかという本です。&lt;br /&gt;
この本では、文章を書く時にアウトアインをどう動かして文章に仕立て上げていくか、ということが書いてあり、
文章を書いている他人の思考が垣間見られてとても参考になりました。&lt;/p&gt;

&lt;p&gt;そう言えば「発想法」という本があります。&lt;br /&gt;
だいぶ昔に読んだので記憶が曖昧なところがありますが、
この本は「KJ法」という思考手段について解説しています。&lt;br /&gt;
それ自体も役に立ったような気がしますが、何よりも著者が文化人類学の研究をどのように行っているのかが間接的にわかり勉強になった記憶があります。&lt;/p&gt;

&lt;p&gt;人が文章を書くまでのプロセスをパクろう！！&lt;br /&gt;
これです。作家が本を書くまでの作業や思考の過程が見たいです。&lt;/p&gt;

&lt;p&gt;世の中には絵でも文章でも音楽でもプログラムでも作品としての結果は溢れているのですが、その作成の過程という情報は驚くほどに少ないです。
絶対に参考になると思うのでGitHubのようなものができて欲しいなと思っています。ただ、GitHubはソフトウェア開発の中のソースコードしか残っていないので、アイデアだったり設計途中の思考だったりも履歴付きで見られるものがいいです。&lt;/p&gt;

&lt;p&gt;こんなモヤっとした考えを、この前本屋に行った時に思い出したので妻に聞いてみました。
妻は昔文章を書く仕事をしていました。&lt;/p&gt;

&lt;p&gt;僕「「発想法」という本の中で研究者の作業が垣間見れて参考になったんだけど、いま文章を書けるようになりたいと思っていてそれの作家版はないかな？」&lt;br /&gt;
妻「柳田国男が「取材」について書いていた気がする」&lt;/p&gt;

&lt;p&gt;ここで目鱗です。&lt;br /&gt;
ああ、そうか、「取材」というのか。作家が文章を書くまでの間の材料集めや加工を。&lt;/p&gt;

&lt;p&gt;これは大きな収穫でした。
今は「文章」ではなく「取材」についての情報を集めています。&lt;br /&gt;
確かに僕が求めているのは「取材」の方法やプロセスっぽいです。&lt;br /&gt;
こんな本があるよ、とか教えてもらえたらとても喜びます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>手帳を買いました</title>
      <link>http://marony.github.io/post/post_20181226091550/</link>
      <pubDate>Wed, 26 Dec 2018 09:15:50 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181226091550/</guid>
      <description>

&lt;h2 id=&#34;手帳を買いました&#34;&gt;手帳を買いました&lt;/h2&gt;

&lt;p&gt;この度、ITエンジニアとしてはどうかと思うものの、時代遅れな手帳を買いました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://marony.github.io/images/post/P_20181225_143419.jpg&#34; alt=&#34;手帳&#34; /&gt;&lt;/p&gt;

&lt;p&gt;昔は手帳を使っていたのですが最近は情報管理(予定とタスク)はデジタルメインでした。&lt;/p&gt;

&lt;p&gt;大昔は手帳とデジタル(Googleカレンダーとhowm)を併用していましたが、Googleカレンダーとhowmに移行してから面倒で手帳は使わなくなりました。&lt;br /&gt;
その後、howmはまとまったタスク(プロジェクト)を扱うのに不便でWorkFlowyに移行しました。WorkFlowyは使いやすくツリー状にタスクを管理できるのでプロジェクト単位でのタスクでも管理しやすく、ここ数ヶ月あまり不便なく利用しています。&lt;/p&gt;

&lt;p&gt;また、仕事では複数プロジェクトに関わることが多く、突発の仕事が降ってくることも多いので、机の上にはいつもA4の紙を広げています。&lt;/p&gt;

&lt;p&gt;マスタータスクリストはWorkFlowyで管理しますが、今日や今週やることをA4の紙に書き出し、今現在取り掛かっているタスクがわかるように印をつけ、割り込みに対応したあとにすぐに戻ることができるようにしています。次の日に「昨日何をやってたっけ？」を思い出すのも一瞬です。&lt;/p&gt;

&lt;p&gt;僕は記憶力が皆無ですぐに興味が他に移ってしまうので、その前にやっていたことをすぐに思い出せるというのは生産性に大きな影響を与えます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://marony.github.io/images/post/P_20181225_144413.jpg&#34; alt=&#34;A4紙&#34; /&gt;&lt;/p&gt;

&lt;p&gt;紙には適当に書きなぐり、図や矢印を引きまくり、いつでもくしゃくしゃにして捨てられるという大きなメリットがあります。今でも設計を考える時に書きなぐるのは、ExcelでもVISIOでもdraw.ioでもFreeMindでもなく紙です。&lt;/p&gt;

&lt;p&gt;GoogleカレンダーとWorkFlowyを予定とタスクの正本として扱い、A4紙を現在やっていることのバッファと書きなぐり用に利用しているわけです。&lt;/p&gt;

&lt;p&gt;で、今回手帳を買ったわけですが、デコったり過度に装飾したり、インスタ映えしたり、キレイに書いたり、夢を叶えてくれたり、そんなものは僕には不要です。毎日の雑事さえこなせればいいのです。&lt;/p&gt;

&lt;p&gt;選んだものはフランクリン・プランナーのように1日1ページがいいかなと思い、ほぼ日手帳のカズンです。&lt;br /&gt;
ネットや雑誌にはキレイに着飾ったほぼ日手帳が広がっていますが、僕はあくまでもA4紙の代わりに利用するつもりです。&lt;/p&gt;

&lt;p&gt;予定やタスク全般に言えますが、デジタル管理だと転記しないからか見た目がそっけないからか、レビューを疎かにしてしまい、レビューしても記憶に残らず、確かに記録はされているけれどすっかり忘れているという状態になります。&lt;/p&gt;

&lt;p&gt;そこで手帳の月間カレンダーや今日のページに記憶に残したいものだけを書き出し、僕の脳みそのリマインダにしようという意図があります。&lt;br /&gt;
毎日同じ場所に同じことが書いてあると脳みそはなぜか覚えてるのです。&lt;br /&gt;
家庭の大事な用事や長期間の計画などはデジタル管理ではたびたび抜けてしまう部分でした。&lt;/p&gt;

&lt;p&gt;上記が大まかな指針ですが、具体的に何をどこにどのように書くかは来年使いながら適当に決めていきます。&lt;br /&gt;
僕の悪い癖で、最初に物事を完璧に決めようとして手を広げすぎて頭が混乱し面倒になって失敗する、というものがあります。&lt;br /&gt;
なるべくシンプルに使いながら決めていきます。&lt;br /&gt;
いくら優れていても努力や忍耐が必要なシステムは長続きしません。&lt;/p&gt;

&lt;p&gt;怠惰や欲望に従って動くとなぜかうまく回るというのが良いシステムです。資本主義のように。&lt;/p&gt;

&lt;p&gt;補足として、紙だとパソコンのように後ろから誰かに見られないという安心感と、たびたび情報管理を移行することで、結果的にそれがレビューになる、という理由もあったりします。&lt;/p&gt;

&lt;p&gt;一生のうちに、ビシっと自分向け情報管理システムを構築したいものです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>書く習慣をつけたい</title>
      <link>http://marony.github.io/post/post_20181222153450/</link>
      <pubDate>Sat, 22 Dec 2018 15:34:50 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181222153450/</guid>
      <description>

&lt;h2 id=&#34;書く習慣をつけたい&#34;&gt;書く習慣をつけたい&lt;/h2&gt;

&lt;p&gt;僕はTwitterジャンキーですが、文章を書くことができません。&lt;br /&gt;
まず書く内容が決まらないとかいう以前の問題で、書く方法がわかりません。&lt;/p&gt;

&lt;p&gt;文章を書くには何をするのか？&lt;br /&gt;
頭の中で何を考え何をどうすると文章になるのか？&lt;/p&gt;

&lt;p&gt;この程度の短文ならばもちろん今現在書いているので書けるのだけれど…&lt;/p&gt;

&lt;p&gt;ひとまずこのままではマズいと思うのでなんでもいいから文章を書いていく。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoでMermaid.jsを使えるようにした</title>
      <link>http://marony.github.io/post/post_20181221132734/</link>
      <pubDate>Fri, 21 Dec 2018 13:27:34 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181221132734/</guid>
      <description>

&lt;h2 id=&#34;hugoでmermaid-jsを使えるようにした&#34;&gt;HugoでMermaid.jsを使えるようにした&lt;/h2&gt;

&lt;p&gt;こう書けば、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;｛｛&amp;lt; mermaid align=&amp;quot;left&amp;quot; &amp;gt;｝｝
  graph LR;
  A[Hard edge] --&amp;gt;|Link text| B(Round edge)
  B --&amp;gt; C{Decision}
  C --&amp;gt;|One| D[Result one]
  C --&amp;gt;|Two| E[Result two]
｛｛&amp;lt; /mermaid &amp;gt;｝｝
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうなる。&lt;/p&gt;

&lt;div class=&#34;mermaid&#34; align=&#34;left&#34;&gt;
  graph LR;
  A[Hard edge] --&gt;|Link text| B(Round edge)
  B --&gt; C{Decision}
  C --&gt;|One| D[Result one]
  C --&gt;|Two| E[Result two]
&lt;/div&gt;


&lt;p&gt;※ コードブロックでエラーが出るので安直に半角の&amp;rsquo;{&amp;lsquo;, &amp;lsquo;}&amp;lsquo;を全角の&amp;rsquo;｛&amp;rsquo;, &amp;lsquo;｝&amp;rsquo;に置換して回避してます…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>プロフィールページを更新</title>
      <link>http://marony.github.io/post/post_20181221122922/</link>
      <pubDate>Thu, 20 Dec 2018 10:36:22 JST</pubDate>
      
      <guid>http://marony.github.io/post/post_20181221122922/</guid>
      <description>

&lt;h2 id=&#34;プロフィールページを更新&#34;&gt;プロフィールページを更新&lt;/h2&gt;

&lt;p&gt;単なるイメージチェンジです。
心機一転。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>profile</title>
      <link>http://marony.github.io/profile/</link>
      <pubDate>Thu, 20 Dec 2018 09:29:42 JST</pubDate>
      
      <guid>http://marony.github.io/profile/</guid>
      <description>

&lt;h2 id=&#34;人種&#34;&gt;人種&lt;/h2&gt;

&lt;p&gt;C#プログラマ@東京&lt;/p&gt;

&lt;h2 id=&#34;構成要素&#34;&gt;構成要素&lt;/h2&gt;

&lt;div&gt;
    &lt;canvas id=&#34;profileChart&#34; width=&#34;860&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;
    
    &lt;script src=&#34;../../js/chartData.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;../../js/Chart.min.js&#34;&gt;&lt;/script&gt;
    
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/_marony&#34;&gt;Twitter&lt;/a&gt;
&lt;a href=&#34;https://twitter.com/_marony?ref_src=twsrc%5Etfw&#34; class=&#34;twitter-follow-button&#34; data-show-count=&#34;false&#34;&gt;Follow @_marony&lt;/a&gt;&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/marony0607/&#34;&gt;SoundCloud&lt;/a&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/127523460&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/137619535&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;githubリポジトリ&#34;&gt;GitHubリポジトリ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/diskreport&#34;&gt;Scalaでディスク容量表示アプリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/katamino-solver&#34;&gt;Katamino(カタミノ)解いてる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/fix-const&#34;&gt;VSCodeのネタ機能拡張作ったり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/monhanxx&#34;&gt;モンハンXX攻略アプリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/tf-fizzbuzz&#34;&gt;TensorFlowでFizzBuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/raft_test&#34;&gt;ScalaのAKKAでRaftアルゴリズムを試した&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/youtuber&#34;&gt;YouTubeダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/kuina-sudoku&#34;&gt;くいなちゃんのトランプ数独解法アルゴリズム(Clojure)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/SudokuCS&#34;&gt;C#で数独を解くプログラム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/SudokuFS&#34;&gt;F#で数独を解くプログラム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/Syogaku4&#34;&gt;小学4年生の息子の問題を解く(Scala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/TenPuzzle&#34;&gt;10パズル(Scala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/syogi&#34;&gt;アルゴリズム対戦将棋(Clojureのお勉強)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/worker&#34;&gt;社畜.net(ClojureでWebサービス)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/scala3d_wireframe&#34;&gt;Scalaで3D表示してみたり…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/cpp3d&#34;&gt;C++で3D表示してみたり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/marony/rust3d&#34;&gt;Rustで3D表示してみたり&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
